name: Setup PR
on:
  # Triggers the workflow when a PR is opened or reopened
  pull_request:
    types: [opened, reopened]
jobs:
  auto-label:
    name: Label PR
    runs-on: ubuntu-latest
    steps:
      # Token for github app
      - name: Generate Token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.KILLIAN_ID }}
          private_key: ${{ secrets.KILLIAN_PRIVATE_KEY }}
      # Label PR by head branch's name
      - name: Auto Labeler
        uses: TimonVS/pr-labeler-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Re-Get Labels
        id: get-label-arr
        run: |
          export LENGTH=$(curl -k \
          -H "Accept: application/vnd.github.inertia-preview+json" \
          -H "Authorization: token ${{ steps.generate_token.outputs.token }}" \
          https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/${{ github.event.pull_request.number }} | jq '.labels | length')
          echo "::set-output name=length::$(echo $LENGTH)"
      # Label misc if no label has been applied, typically only run after Setup PR
      - name: Label Misc
        if: ${{ steps.get-label-arr.outputs.length == 0 }}
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          label: "type: misc"
          type: add
      - if: startsWith(github.event.pull_request.head.ref, 'release/')
        name: Assign Project - head is release
        uses: technote-space/create-project-card-action@v1
        with:
          PROJECT: ${{ github.event.pull_request.head.ref }}
          COLUMN: In progress
      - if: startsWith(github.event.pull_request.base.ref, 'release/')
        name: Assign Project - base is release
        uses: technote-space/create-project-card-action@v1
        with:
          PROJECT: ${{ github.event.pull_request.base.ref }}
          COLUMN: In progress
  enable-auto-merge:
    name: Enable Auto-Merge
    runs-on: ubuntu-latest
    steps:
      # Enable auto-merge if base != main
      - if: github.event.pull_request.base.ref != 'main'
        name: Enable Pull Request Auto-Merge
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          # TODO: Update with Github App when supported
          # Discussion at https://github.com/peter-evans/enable-pull-request-automerge/issues/68
          token: ${{ secrets.ALFIE_PAT }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: "REBASE"
      # Comment if auto-merge enabled
      - if: github.event.pull_request.base.ref != 'main'
        name: Instructions to Auto-Merge & Rebase
        uses: allthatjazzleo/actions-pull-request-add-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            - This PR has auto-merge enabled but will only merge when both of below are true:
                - 1 or more reviews have approved
                - the label ![`status: ready to merge`](https://img.shields.io/badge/-Ready%20to%20Merge-success) is applied
            - In case the PR's head branch: `${{ github.event.pull_request.head.ref }}` is not up-to-date with its base: `${{ github.event.pull_request.base.ref }}`, you may trigger an auto-rebase by commenting `/rebase`
      # Comment if auto-merge NOT enabled
      - if: github.event.pull_request.base.ref == 'main'
        name: Instructions to Rebase
        uses: allthatjazzleo/actions-pull-request-add-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            - This PR intends to merge to `${{ github.event.pull_request.base.ref }}` hence should be extra protected and not have auto-merge enabled.
            - This PR may only merge when both of below are true:
              - 1 or more reviews have approved
              - the label ![`status: ready to merge`](https://img.shields.io/badge/-Ready%20to%20Merge-success) is applied
            - In case the PR's head branch: `${{ github.event.pull_request.head.ref }}` is not up-to-date with its base: `${{ github.event.pull_request.base.ref }}`, you may trigger an auto-rebase by commenting `/rebase`
  release-history:
    # Runs only if head is release/*, typically means the base is main
    if: startsWith(github.event.pull_request.head.ref, 'release/')
    name: Release History
    runs-on: ubuntu-latest
    steps:
      # Token for github app
      - name: Generate Token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.RM_ID }}
          private_key: ${{ secrets.RM_PRIVATE_KEY }}
      # Update PR description with merge history
      - name: Pull Request Body
        uses: technote-space/pr-commit-body-action@v1
        with:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
